@{
  var title = "旅行";
  var tagline = "谨防迷路";
}

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
  <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
  <meta name="theme-color" content="#157878">
  <title>@title</title>
  <link href="@Context.GetLink("/scss/style.css")" rel="stylesheet">
</head>

<body>

  <!-- Site Header -->
  @RenderSectionOrPartial("Header", "include/_header")

  <section class="page-header" style="padding-top: 80px; padding-bottom: 40px; background: linear-gradient(0deg,rgba(0,0,0,0.2),rgba(0,0,0,0.0)), url('/assets/img/home-header.jpg') center center repeat;">
    <h1 class="project-name">@title</h1>
    <h2 class="project-tagline">
      <input type="button" value="@tagline" onclick="delToken()"/>
    </h2>

  </section>

  <section class="main-content">
    @RenderBody()

    <div id="test" />

    <!-- Remote Content -->
    <!-- Site Footer -->
    @RenderSectionOrPartial("Footer", "include/_footer")
  </section>

  <script>
    var tokenKey = "gh_token";

    function getInit() {
      if (checkToken()) {
        return {
          headers: {
            'Authorization': 'token ' + getCookie(tokenKey),
            'Accept': 'application/vnd.github.v3.raw',
          }
        };
      }
    }

    // 'https://api.github.com/repos/xkdip/hermit/contents/docs/test/index.html?ref=develop'
    function handleContent(url) {
      fetch(url, getInit())
        .then(rsp => rsp.text())
        .then(text => {
          console.log('load content...');
          document.getElementById("test").innerHTML = text;
          handleImgs();
        })
        .catch(() => {
          throw new Error('Txt load FAILED.');
        });
    }

    function handleImgs() {
      var imgs = document.querySelectorAll('.private-image');
      Array.from(imgs).forEach(el => {
        if (!el.src) {
          var source = el.dataset.src;
          fetch(source, getInit())
            .then(rsp => rsp.blob())
            .then(blob => {
              console.log('load img...');
              el.src = URL.createObjectURL(blob);
            })
            .catch(() => {
              throw new Error('Image load FAILED.');
            });
        }
      })
    }

    function getQueryString(name) {
      let reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)", "i");
      let r = window.location.search.substr(1).match(reg);
      if (r != null) {
        return decodeURIComponent(r[2]);
      };
      return null;
    }
    function getCookie(cname) {
      var name = cname + "=";
      var decodedCookie = decodeURIComponent(document.cookie);
      var ca = decodedCookie.split(';');
      for(var i = 0; i <ca.length; i++) {
          var c = ca[i];
          while (c.charAt(0) == ' ') {
              c = c.substring(1);
          }
          if (c.indexOf(name) == 0) {
              return c.substring(name.length, c.length);
          }
      }
      return "";
    }

    function setCookie(cname, cvalue, exdays) {
      var d = new Date();
      d.setTime(d.getTime() + (exdays*24*60*60*1000));
      var expires = "expires="+ d.toUTCString();
      document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
    }

    function delCookie(name) {
      var cval=getCookie(name);
      if(cval!=null) {
        setCookie(name, cval, -1);
      }
    }

    function checkToken() {
      var token = getCookie(tokenKey);
      if (token != "") {
        return true;
      }
      else {
        token = prompt("password: ", "");
        if (token != null && token != "") {
          setCookie(tokenKey, token);
          return true;
        }
        return false;
      }
    }

    function delToken() {
      delCookie(tokenKey);
    }

    if (checkToken()) {
      var url = getQueryString("url");
      if (url) {
        handleContent(url);
      }
    }

  </script>
</body>

</html>
